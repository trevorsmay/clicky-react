{"ast":null,"code":"var _jsxFileName = \"/Users/trevormay/Desktop/clicky-react/src/App.js\";\nimport React, { Component } from 'react';\nimport Card from \"./components/Card\";\nimport cards from \"./cards.json\"; // import Card from \"./components/Card\";\n\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport { isThisExpression } from '@babel/types';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards,\n      score: 0,\n      highscore: 0\n    };\n\n    this.gameOver = () => {\n      if (this.state.score > this.state.highscore) {\n        this.setState({\n          highscore: this.state.score\n        }, function () {\n          console.log(this.state.highscore);\n        });\n      }\n\n      this.state.cards.forEach(card => {\n        card.count = 0;\n      });\n      alert(\"Game Over :(/nscore: \".concat(this.state.score));\n      this.setState({\n        score: 0\n      });\n      return true;\n    };\n\n    this.clickCount = id => {\n      this.state.cards.find((o, i) => {\n        if (o.id === id) {\n          if (cards[i].count === 0) {\n            cards[i].count = cards[i].count + 1;\n            this.setState({\n              scored: this.state.score + 1\n            }, function () {\n              console.log(this.state.score);\n            });\n            this.state.cards.sort(() => Math.random() - 0.5);\n            return true;\n          } else {\n            this.gameOver();\n          }\n        }\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(Header, {\n      score: this.state.score,\n      highscore: this.state.highscore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"World Leader Click Game\"), this.state.cards.map(card => React.createElement(Card, {\n      clickCount: this.clickCount,\n      id: card.id,\n      key: card.id,\n      image: card.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/trevormay/Desktop/clicky-react/src/App.js"],"names":["React","Component","Card","cards","Wrapper","Header","isThisExpression","App","state","score","highscore","gameOver","setState","console","log","forEach","card","count","alert","clickCount","id","find","o","i","scored","sort","Math","random","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,cAAlB,C,CACA;;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,gBAAT,QAAiC,cAAjC;;AAGA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BO,KAD0B,GACnB;AACLL,MAAAA,KADK;AAELM,MAAAA,KAAK,EAAE,CAFF;AAGLC,MAAAA,SAAS,EAAE;AAHN,KADmB;;AAAA,SAO1BC,QAP0B,GAOf,MAAM;AACf,UAAI,KAAKH,KAAL,CAAWC,KAAX,GAAmB,KAAKD,KAAL,CAAWE,SAAlC,EAA6C;AAC3C,aAAKE,QAAL,CAAc;AAACF,UAAAA,SAAS,EAAE,KAAKF,KAAL,CAAWC;AAAvB,SAAd,EAA6C,YAAW;AACtDI,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWE,SAAvB;AACD,SAFD;AAGD;;AACD,WAAKF,KAAL,CAAWL,KAAX,CAAiBY,OAAjB,CAAyBC,IAAI,IAAI;AAC/BA,QAAAA,IAAI,CAACC,KAAL,GAAW,CAAX;AACD,OAFD;AAGAC,MAAAA,KAAK,gCAAyB,KAAKV,KAAL,CAAWC,KAApC,EAAL;AACA,WAAKG,QAAL,CAAc;AAACH,QAAAA,KAAK,EAAE;AAAR,OAAd;AACA,aAAO,IAAP;AACD,KAnByB;;AAAA,SAqB1BU,UArB0B,GAqBbC,EAAE,IAAI;AACjB,WAAKZ,KAAL,CAAWL,KAAX,CAAiBkB,IAAjB,CAAsB,CAACC,CAAD,EAAGC,CAAH,KAAQ;AAC5B,YAAGD,CAAC,CAACF,EAAF,KAASA,EAAZ,EAAgB;AACd,cAAIjB,KAAK,CAACoB,CAAD,CAAL,CAASN,KAAT,KAAmB,CAAvB,EAAyB;AACvBd,YAAAA,KAAK,CAACoB,CAAD,CAAL,CAASN,KAAT,GAAiBd,KAAK,CAACoB,CAAD,CAAL,CAASN,KAAT,GAAiB,CAAlC;AACA,iBAAKL,QAAL,CAAc;AAACY,cAAAA,MAAM,EAAG,KAAKhB,KAAL,CAAWC,KAAX,GAAmB;AAA7B,aAAd,EAA+C,YAAW;AACxDI,cAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWC,KAAvB;AACD,aAFD;AAGA,iBAAKD,KAAL,CAAWL,KAAX,CAAiBsB,IAAjB,CAAsB,MAAMC,IAAI,CAACC,MAAL,KAAgB,GAA5C;AACA,mBAAO,IAAP;AACD,WAPD,MAOO;AACL,iBAAKhB,QAAL;AACD;AACI;AACR,OAbD;AAcD,KApCyB;AAAA;;AAsC5BiB,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWC,KAA1B;AAAiC,MAAA,SAAS,EAAE,KAAKD,KAAL,CAAWE,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEG,KAAKF,KAAL,CAAWL,KAAX,CAAiB0B,GAAjB,CAAqBb,IAAI,IACxB,oBAAC,IAAD;AACE,MAAA,UAAU,EAAE,KAAKG,UADnB;AAEE,MAAA,EAAE,EAAEH,IAAI,CAACI,EAFX;AAGE,MAAA,GAAG,EAAEJ,IAAI,CAACI,EAHZ;AAIE,MAAA,KAAK,EAAEJ,IAAI,CAACI,EAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFH,CADF;AAaD;;AApD2B;;AAuD5B,eAAeb,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Card from \"./components/Card\";\nimport cards from \"./cards.json\";\n// import Card from \"./components/Card\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport { isThisExpression } from '@babel/types';\n\n\nclass App extends Component {\n  state= {\n    cards,\n    score: 0,\n    highscore: 0\n  };\n\n  gameOver = () => {\n    if (this.state.score > this.state.highscore) {\n      this.setState({highscore: this.state.score}, function() {\n        console.log(this.state.highscore);\n      });\n    }\n    this.state.cards.forEach(card => {\n      card.count=0;\n    });\n    alert(`Game Over :(/nscore: ${this.state.score}`);\n    this.setState({score: 0});\n    return true;\n  }\n\n  clickCount = id => {\n    this.state.cards.find((o,i) =>{\n      if(o.id === id) {\n        if (cards[i].count === 0){\n          cards[i].count = cards[i].count + 1;\n          this.setState({scored : this.state.score + 1}, function() {\n            console.log(this.state.score);\n          });\n          this.state.cards.sort(() => Math.random() - 0.5)\n          return true;\n        } else {\n          this.gameOver();\n        }\n            }\n    });\n  }\n\nrender() {\n  return (\n    <Wrapper>\n      <Header score={this.state.score} highscore={this.state.highscore}>World Leader Click Game</Header>\n      {this.state.cards.map(card => (\n        <Card \n          clickCount={this.clickCount}\n          id={card.id}\n          key={card.id}\n          image={card.id}\n        />\n        ))}\n    </Wrapper>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}